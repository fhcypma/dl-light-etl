# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'

- script: |
    python -m pip install black
    black ./dl_light_etl --check
  displayName: 'Code formatting check'

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  displayName: 'Pytest'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

- script: |
    python -m build
  displayName: Build

- task: TwineAuthenticate@1
  displayName: Twine Authenticate
  inputs:
    artifactFeed: dl-light/dl-light-etl

- script: |
    python -m pip install twine
    python -m twine upload -r dl-light-etl --config-file $(PYPIRC_PATH) dist/*.whl
  displayName: Publish
