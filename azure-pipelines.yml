# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Test
  jobs:
  - job: Test

    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        make install
      displayName: 'Install dependencies'

    - script: make code
      displayName: 'Linting and code formatting check'

    - script: make test
      displayName: Test

    - task: PublishTestResults@2
      displayName: "Publish Test Results junit/*"
      condition: always()
      inputs:
        testResultsFiles: "junit/*"
        testRunTitle: "Python $(python.version)"

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

- stage: Build
  dependsOn: Test
  jobs:
  - job: Build
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
      displayName: 'Use Python 3.9'

    - script: make build
      displayName: Build
      

    - task: TwineAuthenticate@1
      displayName: Twine Authenticate
      inputs:
        artifactFeed: dl-light/dl-light-etl

    - script: |
        python -m pip install twine
        python -m twine upload -r dl-light-etl --config-file $(PYPIRC_PATH) dist/*.whl
      displayName: Publish
